version: '3.8'  # Utilise une version adaptée à tes besoins

services:
  mariadb:
    restart: always
    build:
      context: requirements/mariadb  # Contexte de construction, le dossier où se trouve le Dockerfile
      dockerfile: Dockerfile  # Spécifie le nom du Dockerfile si ce n'est pas le nom par défaut
    container_name: mariadb-ctn  # Nom du conteneur
    ports:
      - "3306:3306"  # Redirige le port 3306 de l'hôte vers le conteneur
    volumes:
      - mariadb-data:/var/lib/mysql  # Montre un volume pour persister les données
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - my-network  # Ajouter le service au réseau

  wordpress:
    restart: always
    build:
      context: requirements/wordpress
      dockerfile: Dockerfile
    container_name: wp-ctn
    expose:
      - "9000"
    depends_on:
      - mariadb
    volumes:
      - wordpress-data:/var/www/html  # Le volume pour stocker les fichiers WordPress
    networks:
      - my-network

  nginx:
    restart: always
    build:
      context: requirements/nginx
      dockerfile: Dockerfile
    container_name: nginx-ctn
    ports:
      - "80:80"
      - "443:443"
    networks:
      - my-network
    volumes:
      - wordpress-data:/var/www/html 
    depends_on:
      - wordpress
  
volumes:
  mariadb-data:
    driver: local
    driver_opts:
      type: none
      device: '/home/${USER}/data/mariadb'  # Bind mount pour MariaDB
      o: bind

  wordpress-data:
    driver: local
    driver_opts:
      type: none
      device: '/home/${USER}/data/wordpress'  # Bind mount pour WordPress
      o: bind

networks:
  my-network:
    driver: bridge  # Création du réseau
