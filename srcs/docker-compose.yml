version: '3.8'  # Use an appropriate version for your needs

services:
  mariadb:
    container_name: mariadb  # Container name
    restart: always
    build:
      context: requirements/mariadb  # Build context, the folder where the Dockerfile is located
      dockerfile: Dockerfile  # Specifies the name of the Dockerfile if it is not the default one
    image: mariadb
    ports:
      - "3306:3306"  # Redirect port 3306 from host to container
    volumes:
      - mariadb-data:/var/lib/mysql  # Mount a volume to persist data
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - my-network  # Add the service to the network

  wordpress:
    container_name: wordpress
    restart: always
    build:
      context: requirements/wordpress
      dockerfile: Dockerfile
    image: wordpress
    expose:
      - "9000"
    depends_on:
      - mariadb
    volumes:
      - wordpress-data:/var/www/html  # Volume to store WordPress files
    networks:
      - my-network

  nginx:
    container_name: nginx
    restart: always
    build:
      context: requirements/nginx
      dockerfile: Dockerfile
    image: nginx
    ports:
      - "443:443"
    networks:
      - my-network
    volumes:
      - wordpress-data:/var/www/html  # Mount WordPress files volume
    depends_on:
      - wordpress
  
volumes:
  mariadb-data:
    driver: local
    driver_opts:
      type: none
      device: '/home/${USER}/data/mariadb'  # Bind mount for MariaDB
      o: bind

  wordpress-data:
    driver: local
    driver_opts:
      type: none
      device: '/home/${USER}/data/wordpress'  # Bind mount for WordPress
      o: bind

networks:
  my-network:
    driver: bridge  # Create the network
